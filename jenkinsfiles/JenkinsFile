@Library('KatalonShared@master') _

import co.com.epm.constantes.ConstantesKatalon

node {
    currentBuild.displayName = "Katalon-Mercurio"
    currentBuild.description = "Pruebas en Katalon de Mercurio"

    properties([
        [$class: 'hudson.plugins.buildblocker.BuildBlockerProperty', blockLevel: 'GLOBAL', blockingJobs: '''.*PruebasAutomaticas.*''', scanQueueFor: 'DISABLED', useBuildBlocker: true],
        [$class: '  ', strategy: [$class: 'LogRotator', artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5']],
        disableConcurrentBuilds()
    ])

    def urlRepositorio = "https://github.com/andresorozco427/katalonSharedLibrary.git"
    def rama = "master"
    def katalonTestSuite = "Radicacion documento externo con firma respectiva/Radicacion documento con su respectiva firma"
    def katalonTestCollection = ""
    def aplicacion = "Mercurio"
    def destinatariosNotificacionEmail = "andresorozco427@gmail.com"
    def perfilEjecucion = "MERCURIO UAT"

    scripts.UtilsJenkins utilsJenkins = new scripts.UtilsJenkins()
    def CUSTOM_WORKSPACE = utilsJenkins.giveMeAWorkspace(aplicacion, true)
    def rutaProyecto = "${CUSTOM_WORKSPACE}" + "\\" + "Mercurio\\Mercurio.prj"
    def rutaAbsolutaReporteKatalon = "${CUSTOM_WORKSPACE}" + "\\" + "Reportes-Katalon" + "\\${BUILD_NUMBER}"

   stage('Checkout'){			
			echo "...............CHECKOUT..............."
			  checkout([  
				  	$class: 'GitSCM',
			 	  	branches: [ [ name: '*/${rama}' ] ],
			 	  	doGenerateSubmoduleConfigurations: false,
			 	    extensions: [],
                    submoduleCfg: [],
                     url: urlRepositorio])	   
							
			}

    stage ("Prueba Katalon"){
        try{
            SharedLibrary(
                rutaProyecto: rutaProyecto, 
                testCollection: katalonTestCollection,
                pathReporte: rutaAbsolutaReporteKatalon, 
                perfil: perfilEjecucion,
                reintentar: false,
                cantidadReintentos: 0
            )
            //si las pruebas fueron exitosas, se borra la carpeta del reporte respectivo, para evitar que se llene el workspace de archivos
            dir (rutaAbsolutaReporteKatalon) {
                deleteDir()
            }
        }catch(Exception e){
            throw e
        }finally{
            dir (rutaAbsolutaReporteKatalon) {
                    utilsJenkins.notifyKatalonTest(aplicacion, destinatariosNotificacionEmail);
            }
            utilsJenkins.unmountVirtual(CUSTOM_WORKSPACE)
        }
    }
}